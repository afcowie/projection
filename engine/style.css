/*
    Forked from
	Ribbon theme for Shower presentation template: http://github.com/pepelsbey/shower
	Copyright © 2010–2011 Vadim Makeev, http://pepelsbey.net/
	Licensed under MIT license: https://github.com/pepelsbey/shower/wiki/License
*/


body {
	counter-reset:paging;
}

/*
 * Page number
 */
.slide footer {
	position: absolute;
	bottom: 15px;
	left: 80px;
	font-size: 18px;
	color: #777777;
}
.slide footer.pagenumber {
	left: inherit;
	right: 17px;
}

/*
 * Regretably, Shower's incredibly cool trick of using the :target pseudo
 * element doesn't work when the DOM is populated asynchronously. So we 
 * dynamically add and remove the "active" class to the slide instead. Same
 * result.
 */

.full .slide {
	position:absolute;
	visibility: hidden;
}

.full .slide.active {
	visibility: visible;
}

/*
 * <section> elements are sized to a width of 1024x768. So any work you do 
 * on a "slide" as an author writing a presentation has that as a page size.
 * That is then given 50 top and 80 padding on each side, leaving the canvas
 * at 864x718.
 */
.slide section {
	padding-top: 50px;
	padding-left: 80px;
	padding-right: 80px;
	padding-bottom: 0;
	width: 864px;
	height: 718px;
	background: #ffffff;
	color: #000000;
	z-index: 1;
}

.slide .nopage footer#pagenumber {
    display: none;
}

/*
 * Using CSS class "graphic" causes us to center the (single) image
 * on the page.
 */
.slide.graphic img,
.slide.graphic svg,
.slide.graphic object,
.slide.graphic embed {
	position:absolute;
	left: 50%;
	top: 50%;
	z-index: 0;
	-webkit-transform:translateX(-50%) translateY(-50%);
	-moz-transform:translateX(-50%) translateY(-50%);
	-ms-transform:translateX(-50%) translateY(-50%);
	-o-transform:translateX(-50%) translateY(-50%);
	transform:translateX(-50%) translateY(-50%);
}


/*
 * "cover" is for when you have an image that you want to stretch to cover
 * the entire slide. The "cover w" variant stretches in the horizontal 
 * direction
 */
.slide.cover section {
	background:#000;
	overflow:hidden;
}

.slide.cover img,
.slide.cover svg,
.slide.cover video,
.slide.cover object {
	position:absolute;
	top:0;
	left:50%;
	z-index: 0;
	height:100%;
	-webkit-transform:translateX(-50%);
	-moz-transform:translateX(-50%);
	-ms-transform:translateX(-50%);
	-o-transform:translateX(-50%);
	transform:translateX(-50%);
}

.slide.cover.w img,
.slide.cover.w svg,
.slide.cover.w video,
.slide.cover.w object {
	top:50%;
	left:0;
	width:100%;
	height:auto;
	-webkit-transform:translateY(-50%);
	-moz-transform:translateY(-50%);
	-ms-transform:translateY(-50%);
	-o-transform:translateY(-50%);
	transform:translateY(-50%);
}

/*
 * The "shout" class takes an h2, gives it a rather large font size, and
 * centers it horizontally and vertically. We take a bit of trouble to
 * ensure that wrapped text doesn't bark the edge of the screen. Note that
 * this is not restricted to the standard slide canvas area.
 */
.slide.shout h2 {
	position:absolute;
	top:50%;
	left:5%;
	width:90%;
	text-align:center;
	line-height:1;
	font-size:150px;
	-webkit-transform:translateY(-50%);
	-moz-transform:translateY(-50%);
	-ms-transform:translateY(-50%);
	-o-transform:translateY(-50%);
	transform:translateY(-50%);
}

/*
 * For any arbitrary element, center it horizontally and vertically. This has
 * the same effect as the graphic slide class does.
 */
.middle {
	position:absolute;
	top:50%;
	left:50%;
	-webkit-transform:translate(-50%, -50%);
	-moz-transform:translate(-50%, -50%);
	-ms-transform:translate(-50%, -50%);
	-o-transform:translate(-50%, -50%);
	transform:translate(-50%, -50%);
}


/*
 * Set up the body to be a single non-scrolling page.
 */

.full {
	position: absolute;
	top: 50%;
	left: 50%;
	overflow: hidden;
	margin: -384px 0 0 -512px;
	width: 1024px;
	height: 768px;
	background: #000000;
}

/*
 * This seems to be a bit of voodoo. Setting the scale smaller makes sense
 * for thumbnails, but why does it have to be set under normal conditions?
 * On Chrome the default was -webkit-transform: none;. This changes it to
 * matrix(1, 0, 0, 1, 0, 0);
 */

.full .slide section {
	-webkit-transform:scale(1);
	-moz-transform:scale(1);
	-ms-transform:scale(1);
	-o-transform:scale(1);
	transform:scale(1);
}

